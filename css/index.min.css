/* Main Screen colors */
/* Form colors */
/* Footer colors */
/* Base colors */
/* Screen dimensions */
@font-face {
  font-family: Roboto;
  font-weight: 300;
  font-display: swap;
  src: url("../fonts/Roboto-300.woff2") format("woff2"), url("../fonts/Roboto-300.woff") format("woff");
}
@font-face {
  font-family: Roboto;
  font-weight: 400;
  font-display: swap;
  src: url("../fonts/Roboto-400.woff2") format("woff2"), url("../fonts/Roboto-400.woff") format("woff");
}
@font-face {
  font-family: Roboto;
  font-weight: 700;
  font-display: swap;
  src: url("../fonts/Roboto-700.woff2") format("woff2"), url("../fonts/Roboto-700.woff") format("woff");
}
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  overflow-x: hidden;
  line-height: 1.15; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
figcaption,
figure {
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * Add the correct display in IE.
 */
main {
  display: block;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 */
button {
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button; /* 2 */
}

button,
[type=button],
[type=reset],
[type=submit] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Show the overflow in Edge.
 */
input {
  overflow: visible;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
}
[type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  color: inherit; /* 2 */
  white-space: normal; /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/*
 * Add the correct display in IE 9-.
 */
menu {
  display: block;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

html {
  font-size: 40px;
  position: relative;
  box-sizing: border-box;
  scroll-behavior: smooth;
}
@media (max-width: 1440px) {
  html {
    font-size: calc(25px + 15 * (100vw - 320px) / 1120);
  }
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

img {
  max-width: 100%;
  height: auto;
}

button {
  padding: 0;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
p,
figure,
fieldset {
  margin: 0;
}

iframe {
  border: none;
}

.visually-hidden {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
}

body {
  min-width: 320px;
  min-height: 100vh;
  overflow-x: hidden;
  font-family: Roboto, Arial, sans-serif;
  line-height: 1.3;
  font-size: 1rem;
  font-weight: 400;
  color: #222222;
  background-color: #FFF;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

.container {
  max-width: 1440px;
  padding: 0 15px;
  margin: 0 auto;
}

@media (max-width: 320px) {
  .container {
    max-width: 320px;
  }
}
@media (max-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media (max-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}
@media (max-width: 1440px) {
  .container {
    max-width: 1440px;
  }
}
.header {
  position: absolute;
  top: 0;
  width: 100%;
}
.header__body {
  width: 100%;
  display: flex;
  justify-content: space-between;
}
.header__list {
  display: flex;
  align-items: center;
  height: 140px;
}
@media (max-width: 520px) {
  .header__list {
    display: none;
  }
}
.header__item {
  font-size: 0.65rem;
  margin-right: 40px;
}
.header__point {
  display: inline-block;
  position: relative;
  text-decoration: none;
}
.header__point::before {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  right: 100%;
  height: 2px;
  background-color: #FF6B04;
  transition: right 0.3s ease-out;
}
.header__point:hover::before {
  right: 0;
}
.header__switch {
  display: block;
  padding: 7px 18px;
  font-weight: 700;
  text-align: center;
  background-color: #FF6B04;
  color: #FFF;
  border-radius: 22px;
  transition-property: background-color;
  transition-duration: 0.4s;
  transition-timing-function: ease-out;
}
.header__switch:hover {
  background-color: #99B9FF;
}
.header__logo {
  height: 140px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin-right: 15px;
}
.header__link {
  width: 100%;
  display: flex;
  justify-content: flex-end;
}

.burger {
  display: none;
  position: absolute;
  width: 100%;
  z-index: 1;
  top: 0;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
@media (max-width: 520px) {
  .burger {
    display: block;
  }
}
.burger__body {
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
@media (max-width: 520px) {
  .burger__body {
    width: 120%;
    background: #FFF;
    position: relative;
    top: -255px;
    padding: 50px 0 15px 0;
    height: 250px;
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-evenly;
  }
}
@media (max-width: 520px) {
  .burger__body_active {
    top: 0;
  }
}
.burger__item {
  font-size: 1rem;
}
.burger__point {
  display: inline-block;
  position: relative;
  text-decoration: none;
}
.burger__switch {
  width: 100px;
  display: block;
  padding: 7px 18px;
  font-weight: 700;
  text-align: center;
  background-color: #FF6B04;
  color: #FFF;
  border-radius: 22px;
  transition-property: background-color;
  transition-duration: 0.4s;
  transition-timing-function: ease-out;
}
.burger__btn {
  z-index: 2;
  height: 20px;
  width: 30px;
  right: 20px;
  position: absolute;
  top: 15px;
  cursor: pointer;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
.burger__btn span {
  position: absolute;
  top: 10px;
  right: 0;
  display: block;
  width: 30px;
  height: 2px;
  background: #222222;
}
.burger__btn::before, .burger__btn::after {
  content: "";
  position: absolute;
  right: 0;
  width: 30px;
  height: 2px;
  background: #222222;
}
.burger__btn::before {
  top: 0px;
}
.burger__btn::after {
  top: 20px;
}
.burger__btn_active {
  z-index: 2;
  height: 20px;
  width: 30px;
  right: 20px;
  position: absolute;
  top: 15px;
  cursor: pointer;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
.burger__btn_active span {
  position: absolute;
  top: 10px;
  right: 0;
  display: block;
  width: 0;
  height: 2px;
  background: #222222;
}
.burger__btn_active::before, .burger__btn_active::after {
  content: "";
  position: absolute;
  right: 0;
  width: 30px;
  height: 2px;
  background: #222222;
}
.burger__btn_active::before {
  top: 7px;
  transform: rotate(45deg);
}
.burger__btn_active::after {
  top: 7px;
  transform: rotate(-45deg);
}

.screen {
  height: 100%;
}
.screen__body {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  background: linear-gradient(to left, #99B9FF, #FFF);
}
.screen__list {
  width: 90%;
  padding: 150px 0 50px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
}
@media (max-width: 768px) {
  .screen__list {
    flex-direction: column;
  }
}
.screen__item {
  width: 350px;
  display: flex;
  flex-flow: column nowrap;
}
@media (max-width: 768px) {
  .screen__item {
    flex-direction: column;
    width: calc(270px + 80 * (100vw - 320px) / 704);
  }
}
.screen__item_narrow {
  height: 430px;
  justify-content: space-between;
  align-items: center;
}
@media (max-width: 1024px) {
  .screen__item_narrow {
    height: calc(220px + 210 * (100vw - 320px) / 704);
  }
}
@media (max-width: 768px) {
  .screen__item_narrow {
    order: 2;
  }
}
.screen__item_wide {
  margin-left: 50px;
  width: 600px;
}
@media (max-width: 768px) {
  .screen__item_wide {
    width: calc(200px + 200 * (100vw - 320px) / 448);
    margin-left: 0;
  }
}
.screen__logo {
  width: 346px;
}
@media (max-width: 768px) {
  .screen__logo {
    width: calc(150px + 100 * (100vw - 320px) / 448);
  }
}
.screen__idea {
  width: 307px;
}
@media (max-width: 768px) {
  .screen__idea {
    width: calc(150px + 100 * (100vw - 320px) / 448);
  }
}
.screen__title {
  font-size: 0.9rem;
  text-align: center;
}
.ofer__body {
  padding: 50px 0 50px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-evenly;
  align-items: center;
}
@media (max-width: 768px) {
  .ofer__body {
    flex-direction: column;
  }
  .ofer__body :not(:last-child) {
    margin-bottom: 20px;
  }
}
.ofer__item {
  width: 336px;
  display: flex;
  align-items: center;
  padding: 0 17px;
  justify-content: center;
  color: #FFF;
  border-radius: 37px;
}
@media (max-width: 1440px) {
  .ofer__item {
    width: calc(250px + 86 * (100vw - 320px) / 1120);
  }
}
.ofer__item_orang {
  background: linear-gradient(90deg, #FF6B04, #FFA26A 100%);
  box-shadow: 3px 25px 40px -23px #FF6B04;
}
.ofer__item_violet {
  background: linear-gradient(90deg, #99B9FF, #D2E1FF 100%);
  box-shadow: 3px 25px 40px -23px #99B9FF;
}
.ofer__step {
  font-size: 3.1rem;
  font-weight: 700;
}
.ofer__description {
  font-size: 0.6rem;
}

.title {
  padding-top: 50px;
  font-size: 1rem;
  text-align: center;
}

.partners__list {
  padding: 50px 0 50px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  align-items: center;
  justify-items: center;
  gap: 15px;
}
.partners__link {
  display: block;
  height: 100%;
}

.form__body {
  padding: 50px 0;
}
.form__item {
  margin: 0 auto;
  padding: 50px 30px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
  width: 50%;
  height: 500px;
  background: #F4F4F4;
  border-radius: 62px;
  border: 0px;
}
@media (max-width: 1440px) {
  .form__item {
    height: calc(365px + 65 * (100vw - 320px) / 1120);
  }
}
@media (max-width: 520px) {
  .form__item {
    padding: 35px 20px;
    border-radius: 30px;
  }
}
.form__label_checkbox {
  position: relative;
  font-size: 18px;
  color: #222222;
  user-select: none;
  cursor: pointer;
  padding-left: 40px;
}
@media (max-width: 1440px) {
  .form__label_checkbox {
    font-size: calc(12px + 6 * (100vw - 320px) / 1120);
  }
}
.form__label_checkbox::before {
  content: "";
  display: block;
  position: absolute;
  width: 30px;
  height: 30px;
  background-color: #D9D9D9;
  border-radius: 10px;
  top: 3px;
  left: 0;
}
.form__checkbox:checked + .form__label_checkbox::before {
  background: url("../img/marker.svg");
  background-position: center;
  background-size: 20px 20px;
  background-repeat: no-repeat;
  background-color: #D9D9D9;
}
.form__input {
  width: 100%;
  background: none;
  border: none;
  outline: none;
  padding: 0 0 10px 15px;
}
.form__label_text {
  width: 100%;
  border-radius: 33px;
  border: none;
  background: #D9D9D9;
}
@media (max-width: 1440px) {
  .form__label_text {
    border-radius: calc(17px + 16 * (100vw - 320px) / 1120);
  }
}
.form__input::placeholder {
  font-size: 0.6rem;
  text-transform: uppercase;
  padding: 0 0 0 15px;
}
.form input[type=file] {
  display: none;
}
.form__label_fileInput {
  display: block;
  padding: 10px 25px;
  font-style: normal;
  font-weight: 600;
  font-size: 14px;
  text-align: center;
  line-height: 17px;
  text-transform: uppercase;
  background-color: #FF6B04;
  color: #FFF;
  border-radius: 6px;
  cursor: pointer;
  transition-property: background-color;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
@media (max-width: 1440px) {
  .form__label_fileInput {
    font-size: calc(10px + 4 * (100vw - 320px) / 1120);
    padding-right: calc(10px + 15 * (100vw - 320px) / 1120);
    padding-left: calc(10px + 15 * (100vw - 320px) / 1120);
  }
}
.form__label_fileInput:hover {
  background-color: #99B9FF;
}
.form__checkbox {
  display: none;
}
.form__btn {
  border: transparent;
  border-radius: 36px;
  padding: 30px 116px;
  background: linear-gradient(to right, #FF6B04, #FFA26A);
  box-shadow: 3px 25px 40px -23px #FF6B04;
  color: #FFF;
  font-size: 0.6rem;
  transition-property: box-shadow;
  transition-duration: 0.5s;
  transition-timing-function: ease-out;
}
@media (max-width: 1440px) {
  .form__btn {
    padding-top: calc(14px + 16 * (100vw - 320px) / 1120);
    padding-bottom: calc(14px + 16 * (100vw - 320px) / 1120);
    padding-right: calc(47px + 69 * (100vw - 320px) / 1120);
    padding-left: calc(47px + 69 * (100vw - 320px) / 1120);
  }
}
.form__btn:hover {
  box-shadow: none;
}
.form__input_question {
  height: 3rem;
}

#question > .form__item {
  height: 600px;
}
@media (max-width: 1440px) {
  #question > .form__item {
    height: calc(385px + 215 * (100vw - 320px) / 1120);
  }
}
@media (max-width: 520px) {
  #question > .form__item {
    padding: 35px 20px;
    border-radius: 30px;
  }
}

.footer {
  background: #202929;
  color: #FFF;
  font-size: 0.6rem;
  font-weight: 300;
}
.footer__body {
  padding: 50px 10px;
}
.footer__link {
  display: inline-block;
  position: relative;
  text-decoration: none;
}
.footer__link::before {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  right: 100%;
  height: 2px;
  background-color: #FFF;
  transition: right 0.3s ease-out;
}
.footer__link:hover::before {
  right: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
